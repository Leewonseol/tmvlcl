# 필요한 라이브러리 로드
library(dplyr)
library(ggplot2)

# --- 1. 궁극의 비관적 시나리오 설정 ---

# 시뮬레이션 기본 정보
n_simulations <- 100000
n_competitors <- 13
positions <- 5
gpa_penalty_factor <- 0.0 # 동점자 경쟁 시, 학점으로 인해 무조건 탈락

# 각 세부항목별 능력치 분포 파라미터 설정
skill_distributions <- list(
  # 이름, alpha, beta
  # [수정] 이제 관문 1의 모든 항목이 '쉬움' 또는 '보통'이 됨
  pass_1_1 = c(4, 2),   # 맞춤형 관심: 쉬움
  pass_1_2 = c(5, 2),   # 논리적 연결성: 매우 쉬움
  pass_1_3 = c(3, 2),   # 정보 탐색: 중간보다 쉬움
  # 관문 2는 여전히 어려움
  pass_2_1 = c(2.5, 4), # 압박 검증 대응: 어려움
  pass_2_2 = c(2, 6),   # 적용 및 확장: 매우 어려움
  pass_2_3 = c(2.5, 2.5)# 메타인지: 중간 난이도
)

# --- 2. 몬테카를로 시뮬레이션 실행 ---
your_prob_results <- numeric(n_simulations)
pb <- txtProgressBar(min = 0, max = n_simulations, style = 3)

for (i in 1:n_simulations) {
  
  competitor_survivors_count <- 0
  
  for (j in 1:n_competitors) {
    
    current_probs <- sapply(skill_distributions, function(params) {
      rbeta(1, shape1 = params[1], shape2 = params[2])
    })
    
    # --- 관문 1 평가 (통과 기준: 3개 중 2개 이상 성공) ---
    g1_outcomes <- rbinom(3, 1, prob = current_probs[1:3])
    passed_g1 <- sum(g1_outcomes) >= 2
    if (!passed_g1) next
    
    # --- 관문 2 평가 (통과 기준: 핵심(2-1) 성공 AND 추가(2-2, 2-3) 중 1개 이상 성공) ---
    passed_g2_core <- rbinom(1, 1, prob = current_probs[4]) == 1
    additional_outcomes <- rbinom(2, 1, prob = current_probs[5:6])
    passed_g2_additional <- sum(additional_outcomes) >= 1
    if (!(passed_g2_core && passed_g2_additional)) next
    
    competitor_survivors_count <- competitor_survivors_count + 1
  }
  
  total_survivors <- 1 + competitor_survivors_count
  
  # --- 최종 관문: 학점(GPA) 필터 적용 ---
  if (total_survivors <= positions) {
    your_prob_results[i] <- 1.0  
  } else {
    # gpa_penalty_factor가 0이므로, 나의 합격 확률은 0이 됨.
    your_prob_results[i] <- (positions / total_survivors) * gpa_penalty_factor
  }
  
  setTxtProgressBar(pb, i)
}
close(pb)

# --- 3. 최종 결과 분석 및 출력 ---
final_avg_probability <- mean(your_prob_results)
risk_scenario_count <- sum(your_prob_results < 1.0) 
risk_probability <- risk_scenario_count / n_simulations

cat("\n--- 궁극의 비관적 시나리오 최종 시뮬레이션 결과 ---\n")
cat("총", n_simulations, "번의 가상 면접 시뮬레이션 결과...\n\n")
cat("1. 귀하의 최종 합격 확률(기댓값):", round(final_avg_probability * 100, 2), "%\n")
cat("2. '리스크 시나리오' 발생 확률:", round(risk_probability * 100, 2), "%\n")
